{"ast":null,"code":"var _jsxFileName = \"C:\\\\EDUCATION\\\\Course-from-Udemy-JS-React\\\\practice\\\\React\\\\marvel_starter\\\\src\\\\components\\\\charList\\\\CharList.js\";\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../../services/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charList: [],\n      loading: true,\n      error: false,\n      newItemLoading: false,\n      offset: 1541,\n      charEnded: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.onRequest = offset => {\n      this.onCharListLoading();\n      this.marvelService.getAllCharacters(offset).then(this.onCharListLoaded).catch(this.onError);\n    };\n\n    this.onCharListLoading = () => {\n      this.setState({\n        newItemLoading: true\n      });\n    };\n\n    this.onCharListLoaded = newCharList => {\n      let ended = false;\n\n      if (newCharList.length < 9) {\n        ended = true;\n      }\n\n      this.setState(({\n        offset,\n        charList\n      }) => ({\n        charList: [...charList, ...newCharList],\n        loading: false,\n        newItemLoading: false,\n        offset: offset + 9,\n        charEnded: ended\n      }));\n    };\n\n    this.onError = () => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n\n    this.itemsRefs = [];\n\n    this.setRef = ref => {\n      this.itemsRefs.push(ref);\n    };\n\n    this.focusOnTime = () => {};\n  }\n\n  componentDidMount() {\n    this.onRequest();\n  }\n\n  // Этот метод создан для оптимизации, \n  // чтобы не помещать такую конструкцию в метод render\n  renderItems(arr) {\n    const imgNotFound = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg';\n    const items = arr.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        tabIndex: 0,\n        onClick: () => {\n          this.props.onCharSelected(item.id);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: item.thumbnail === imgNotFound ? {\n            objectFit: \"contain\"\n          } : {\n            objectFit: \"cover\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this);\n    }); // А эта конструкция вынесена для центровки спиннера/ошибки\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      charList,\n      loading,\n      error,\n      offset,\n      newItemLoading,\n      charEnded\n    } = this.state;\n    const items = this.renderItems(charList);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error) ? items : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        disabled: newItemLoading,\n        style: {\n          'display': charEnded ? 'none' : 'block'\n        },\n        onClick: () => this.onRequest(offset),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func\n};\nexport default CharList;","map":{"version":3,"sources":["C:/EDUCATION/Course-from-Udemy-JS-React/practice/React/marvel_starter/src/components/charList/CharList.js"],"names":["Component","PropTypes","Spinner","ErrorMessage","MarvelService","CharList","state","charList","loading","error","newItemLoading","offset","charEnded","marvelService","onRequest","onCharListLoading","getAllCharacters","then","onCharListLoaded","catch","onError","setState","newCharList","ended","length","itemsRefs","setRef","ref","push","focusOnTime","componentDidMount","renderItems","arr","imgNotFound","items","map","item","i","props","onCharSelected","id","thumbnail","name","objectFit","render","errorMessage","spinner","content","propTypes","func"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Spinner from '../../services/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService';\r\n\r\nimport './charList.scss';\r\nclass CharList extends Component {\r\n\r\n    state = {\r\n        charList: [],\r\n        loading: true,\r\n        error: false,\r\n        newItemLoading: false,\r\n        offset: 1541,\r\n        charEnded: false\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.onRequest();\r\n    }\r\n\r\n    onRequest = (offset) => {\r\n        this.onCharListLoading()\r\n        this.marvelService.getAllCharacters(offset)\r\n            .then(this.onCharListLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    onCharListLoading = () => {\r\n        this.setState({\r\n            newItemLoading: true\r\n        })\r\n    }\r\n\r\n    onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n\r\n        if (newCharList.length < 9) {\r\n            ended = true\r\n        }\r\n\r\n        this.setState(({ offset, charList }) => ({\r\n            charList: [...charList, ...newCharList],\r\n            loading: false,\r\n            newItemLoading: false,\r\n            offset: offset + 9,\r\n            charEnded: ended\r\n        }))\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    itemsRefs = [];\r\n\r\n    setRef = (ref) => {\r\n        this.itemsRefs.push(ref)\r\n    }\r\n\r\n    focusOnTime = () => {\r\n\r\n    }\r\n\r\n\r\n    // Этот метод создан для оптимизации, \r\n    // чтобы не помещать такую конструкцию в метод render\r\n    renderItems(arr) {\r\n        const imgNotFound = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg';\r\n        const items = arr.map((item, i) => {\r\n            return (\r\n                <li\r\n                    className=\"char__item\"\r\n                    tabIndex={0}\r\n                    key={item.id}\r\n                    onClick={() => { this.props.onCharSelected(item.id) }}>\r\n                    <img\r\n                        src={item.thumbnail}\r\n                        alt={item.name}\r\n                        style={item.thumbnail === imgNotFound ? { objectFit: \"contain\" } : { objectFit: \"cover\" }} />\r\n                    <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n        // А эта конструкция вынесена для центровки спиннера/ошибки\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { charList, loading, error, offset, newItemLoading, charEnded } = this.state;\r\n\r\n        const items = this.renderItems(charList);\r\n\r\n        const errorMessage = error ? <ErrorMessage /> : null;\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const content = !(loading || error) ? items : null;\r\n\r\n        return (\r\n            <div className=\"char__list\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <button\r\n                    className=\"button button__main button__long\"\r\n                    disabled={newItemLoading}\r\n                    style={{ 'display': charEnded ? 'none' : 'block' }}\r\n                    onClick={() => this.onRequest(offset)}>\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func\r\n}\r\n\r\nexport default CharList;"]},"metadata":{},"sourceType":"module"}