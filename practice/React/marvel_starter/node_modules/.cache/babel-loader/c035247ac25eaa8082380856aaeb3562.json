{"ast":null,"code":"var _jsxFileName = \"/home/shura/for test/React-course-Udemy/Course-from-Udemy-JS-React/practice/React/marvel_starter/src/components/charList/CharList.js\";\nimport { Component } from 'react';\nimport Spinner from '../../services/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CharList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charList: [],\n      loading: true,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.onRequest = offset => {\n      this.marvelService.getAllCharacters(offset).then(this.onCharListLoaded).catch(this.onError);\n    };\n\n    this.onCharListLoaded = charList => {\n      this.setState({\n        charList,\n        loading: false\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.onRequest();\n  }\n\n  renderItems(arr) {\n    const imgNotFound = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg';\n    const items = arr.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        onClick: () => {\n          this.props.onCharSelected(item.id);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: item.thumbnail === imgNotFound ? {\n            objectFit: \"contain\"\n          } : {\n            objectFit: \"cover\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    }); // А эта конструкция вынесена для центровки спиннера/ошибки\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      charList,\n      loading,\n      error\n    } = this.state;\n    const items = this.renderItems(charList);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error) ? items : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main button__long\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CharList;","map":{"version":3,"sources":["/home/shura/for test/React-course-Udemy/Course-from-Udemy-JS-React/practice/React/marvel_starter/src/components/charList/CharList.js"],"names":["Component","Spinner","ErrorMessage","MarvelService","CharList","state","charList","loading","error","marvelService","onRequest","offset","getAllCharacters","then","onCharListLoaded","catch","onError","setState","componentDidMount","renderItems","arr","imgNotFound","items","map","item","props","onCharSelected","id","thumbnail","name","objectFit","render","errorMessage","spinner","content"],"mappings":"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","sourcesContent":["import {Component} from 'react';\nimport Spinner from '../../services/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.marvelService.getAllCharacters(offset)\n        .then(this.onCharListLoaded)\n        .catch(this.onError)\n    }\n\n    onCharListLoaded = (charList) => {\n        this.setState({\n            charList,\n            loading: false\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    renderItems(arr) {\n        const imgNotFound = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg';\n        const items = arr.map((item) => {\n            return (\n                <li \n                    className=\"char__item\" \n                    key={item.id}\n                    onClick={() => {this.props.onCharSelected(item.id)}}>\n                    <img \n                        src={item.thumbnail} \n                        alt={item.name} \n                        style={item.thumbnail === imgNotFound ? {objectFit: \"contain\"} : {objectFit: \"cover\"}}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n\n    render() {\n        \n        const {charList, loading, error} = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button className=\"button button__main button__long\">\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n    \n}\n\nexport default CharList;"]},"metadata":{},"sourceType":"module"}