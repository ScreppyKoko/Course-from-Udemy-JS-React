{"ast":null,"code":"class MarvelService {\n  constructor() {\n    this._apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    this._apiKey = 'apikey=9937653f737212195a22b2ab01d859ae';\n    this._baseOffset = 1560;\n\n    this.getResource = async url => {\n      let res = await fetch(url);\n\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n      }\n\n      return await res.json();\n    };\n\n    this.getAllCharacters = async (offset = this._baseOffset) => {\n      const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n      return res.data.results.map(this._transformCharacter);\n    };\n\n    this.getCharacter = async id => {\n      const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`); // console.log(res);\n\n      return this._transformCharacter(res.data.results[0]);\n    };\n\n    this._transformCharacter = char => {\n      return {\n        id: char.id,\n        name: char.name,\n        description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n        thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\n        homepage: char.urls[0].url,\n        wiki: char.urls[1].url,\n        comics: char.comics.items\n      };\n    };\n  }\n\n}\n\nexport default MarvelService;","map":{"version":3,"sources":["/home/shura/for test/React-course-Udemy/Course-from-Udemy-JS-React/practice/React/marvel_starter/src/services/MarvelService.js"],"names":["MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","res","fetch","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items"],"mappings":"AAAA,MAAMA,aAAN,CAAoB;AAAA;AAAA,SAChBC,QADgB,GACL,2CADK;AAAA,SAEhBC,OAFgB,GAEN,yCAFM;AAAA,SAGhBC,WAHgB,GAGF,IAHE;;AAAA,SAKhBC,WALgB,GAKF,MAAOC,GAAP,IAAe;AACzB,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;;AAEA,UAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACT,cAAM,IAAIC,KAAJ,CAAW,mBAAkBJ,GAAI,aAAYC,GAAG,CAACI,MAAO,EAAxD,CAAN;AACH;;AACD,aAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AACH,KAZe;;AAAA,SAchBC,gBAdgB,GAcG,OAAOC,MAAM,GAAG,KAAKV,WAArB,KAAqC;AACpD,YAAMG,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,GAAE,KAAKH,QAAS,6BAA4BY,MAAO,IAAG,KAAKX,OAAQ,EAArF,CAAlB;AACA,aAAOI,GAAG,CAACQ,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqB,KAAKC,mBAA1B,CAAP;AACH,KAjBe;;AAAA,SAmBhBC,YAnBgB,GAmBD,MAAOC,EAAP,IAAc;AACzB,YAAMb,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,GAAE,KAAKH,QAAS,cAAakB,EAAG,IAAG,KAAKjB,OAAQ,EAAlE,CAAlB,CADyB,CAEzB;;AACA,aAAO,KAAKe,mBAAL,CAAyBX,GAAG,CAACQ,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAzB,CAAP;AACH,KAvBe;;AAAA,SAyBhBE,mBAzBgB,GAyBOG,IAAD,IAAU;AAC5B,aAAO;AACHD,QAAAA,EAAE,EAAEC,IAAI,CAACD,EADN;AAEHE,QAAAA,IAAI,EAAED,IAAI,CAACC,IAFR;AAGHC,QAAAA,WAAW,EAAEF,IAAI,CAACE,WAAL,GAAoB,GAAEF,IAAI,CAACE,WAAL,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,GAA1B,CAA+B,KAArD,GAA4D,4CAHtE;AAIHC,QAAAA,SAAS,EAAG,GAAEJ,IAAI,CAACI,SAAL,CAAeC,IAAK,IAAGL,IAAI,CAACI,SAAL,CAAeE,SAAU,EAJ3D;AAKHC,QAAAA,QAAQ,EAAEP,IAAI,CAACQ,IAAL,CAAU,CAAV,EAAavB,GALpB;AAMHwB,QAAAA,IAAI,EAAET,IAAI,CAACQ,IAAL,CAAU,CAAV,EAAavB,GANhB;AAOHyB,QAAAA,MAAM,EAAEV,IAAI,CAACU,MAAL,CAAYC;AAPjB,OAAP;AASH,KAnCe;AAAA;;AAAA;;AAsCpB,eAAe/B,aAAf","sourcesContent":["class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=9937653f737212195a22b2ab01d859ae';\n    _baseOffset = 1560;\n\n    getResource = async (url) => {\n        let res = await fetch(url);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\n        }\n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter)\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        // console.log(res);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n}\n\nexport default MarvelService;"]},"metadata":{},"sourceType":"module"}